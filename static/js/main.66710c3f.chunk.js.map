{"version":3,"sources":["config.jsx","app/contexts/PageMetadataProvider.jsx","app/containers/MainContainer.jsx","app/components/Debug.jsx","app/components/Spinner.jsx","app/contexts/ApiProvider.jsx","app/pages/MainPage.jsx","app/App.jsx","app/contexts/AppProvider.jsx","index.jsx"],"names":["api","application","process","PageMetadataContext","createContext","usePageMetadata","useContext","PageMetadataProvider","children","useState","pageTitle","pageMetadata","setPageMetadata","Provider","value","PageTitle","CardHeader","tag","className","MainContainer","Container","Col","md","lg","style","fontSize","config","Card","color","CardBody","href","rel","target","icon","faExternalLinkAlt","Debug","data","maxHeight","JSON","stringify","Spinner","text","props","size","ApiContext","ApiProvider","getEmployees","a","fetch","json","MainPage","useAsync","error","isPending","reload","useEffect","Alert","message","Button","type","onClick","faRedo","App","exact","path","component","AppProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66710c3f.chunk.js","sourcesContent":["/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\nimport preval from 'preval.macro';\n\nconst api = {\n  getEmployeesUri: 'https://dummy.restapiexample.com/api/v1/employees'\n};\n\nconst application = {\n  dateModified: preval('module.exports = new Date().toISOString()'),\n  debug: process.env.REACT_APP_DEBUG,\n  gitCommit: preval(`\n    module.exports = require(\"child_process\")\n      .execSync(\"git rev-parse HEAD\")\n      .toString()\n      .substring(0, 8)\n  `),\n  version: process.env.REACT_APP_VERSION\n};\n\nexport { api, application };\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\nimport PropTypes from 'prop-types';\nimport React, { createContext, useContext, useState } from 'react';\n\nconst PageMetadataContext = createContext();\nconst usePageMetadata = () => useContext(PageMetadataContext);\n\nconst PageMetadataProvider = ({ children }) => {\n  const [pageMetadata, setPageMetadata] = useState({\n    pageTitle: 'React API demo'\n  });\n\n  return (\n    <PageMetadataContext.Provider value={{ pageMetadata, setPageMetadata }}>{children}</PageMetadataContext.Provider>\n  );\n};\n\nPageMetadataProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageMetadataProvider;\nexport { usePageMetadata };\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Container } from 'reactstrap';\nimport * as config from '../../config';\nimport { usePageMetadata } from '../contexts/PageMetadataProvider';\n\nconst PageTitle = () => {\n  const { pageMetadata } = usePageMetadata();\n\n  if (pageMetadata.pageTitle) {\n    return (\n      <>\n        <CardHeader tag=\"h1\" className=\"h4 font-weight-bold\">\n          {pageMetadata.pageTitle}\n        </CardHeader>\n      </>\n    );\n  }\n\n  return null;\n};\n\nconst MainContainer = ({ children }) => {\n  return (\n    <Container className=\"py-3\">\n      <Col md=\"10\" lg=\"8\" className=\"mx-auto\">\n        <div className=\"text-right\" style={{ fontSize: '75%' }}>\n          <em>\n            <code>\n              v{config.application.version} ({config.application.gitCommit}, {config.application.dateModified})\n            </code>\n          </em>\n        </div>\n        <Card color=\"light shadow\">\n          <PageTitle />\n          <CardBody>{children}</CardBody>\n        </Card>\n        <div className=\"small text-muted text-right\">\n          View source on{' '}\n          <a\n            href=\"https://gccode.ssc-spc.gc.ca/iitb-dgiit/PortalSolutions/samples-and-examples/react-api-demo\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            GCCode\n            <sup>\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"ml-1 small\" />\n            </sup>\n          </a>\n        </div>\n      </Col>\n    </Container>\n  );\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default MainContainer;\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Debug = ({ data }) => (\n  <pre className=\"bg-white border overflow-auto small\" style={{ maxHeight: '250px' }}>\n    {JSON.stringify(data, null, 2)}\n  </pre>\n);\n\nDebug.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default Debug;\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Spinner as ReactSpinner } from 'reactstrap';\n\nconst Spinner = ({ text, ...props }) => (\n  <div className=\"text-center\">\n    <p>{text}</p>\n    <ReactSpinner size=\"xl\" {...props} />\n  </div>\n);\n\nSpinner.propTypes = {\n  text: PropTypes.string.isRequired\n};\n\nexport default Spinner;\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\nimport PropTypes from 'prop-types';\nimport React, { createContext, useContext } from 'react';\nimport * as config from '../../config';\n\nconst ApiContext = createContext();\nconst useApi = () => useContext(ApiContext);\n\nconst ApiProvider = ({ children }) => {\n  const getEmployees = async () => (await fetch(config.api.getEmployeesUri)).json();\n  return <ApiContext.Provider value={{ getEmployees }}>{children}</ApiContext.Provider>;\n};\n\nApiProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default ApiProvider;\nexport { useApi };\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\nimport { faRedo, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react';\nimport { useAsync } from 'react-async';\nimport { Alert, Button } from 'reactstrap';\nimport Debug from '../components/Debug';\nimport Spinner from '../components/Spinner';\nimport { useApi } from '../contexts/ApiProvider';\nimport { usePageMetadata } from '../contexts/PageMetadataProvider';\nimport * as config from '../../config';\n\nconst MainPage = () => {\n  const { getEmployees } = useApi();\n  const { setPageMetadata } = usePageMetadata();\n  const { data, error, isPending, reload } = useAsync(getEmployees);\n\n  useEffect(() => {\n    setPageMetadata({ pageTitle: 'React API demo' });\n  }, [setPageMetadata]);\n\n  if (isPending) {\n    return <Spinner text=\"Fetching API data...\" />;\n  }\n\n  if (error) {\n    return (\n      <Alert color=\"danger\">\n        There was an error fetching data: &quot;<em>{error.message}</em>&quot;.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <h2 className=\"h6\">\n        Response from{' '}\n        <a href={config.api.getEmployeesUri} rel=\"noopener noreferrer\" target=\"_blank\">\n          {config.api.getEmployeesUri}\n          <sup>\n            <FontAwesomeIcon icon={faExternalLinkAlt} className=\"ml-1 small\" />\n          </sup>\n        </a>\n      </h2>\n      <Debug data={data} />\n\n      <div className=\"text-right\">\n        <Button type=\"button\" className=\"shadow-sm\" color=\"primary\" size=\"sm\" onClick={reload}>\n          <FontAwesomeIcon icon={faRedo} /> Fetch again...\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\nimport React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport MainContainer from './containers/MainContainer';\nimport MainPage from './pages/MainPage';\n\nconst App = () => (\n  <MainContainer>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n      </Switch>\n    </HashRouter>\n  </MainContainer>\n);\n\nexport default App;\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ApiProvider from './ApiProvider';\nimport PageMetadataProvider from './PageMetadataProvider';\n\nconst AppProvider = ({ children }) => (\n  <ApiProvider>\n    <PageMetadataProvider>{children}</PageMetadataProvider>\n  </ApiProvider>\n);\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default AppProvider;\n","/**\n * Copyright (c) Portal Solutions and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @author Greg Baker <gregory.j.baker@hrsdc-rhdcc.gc.ca>\n */\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// IMPORTANT: always keep polyfills as first imports!\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport AppProvider from './app/contexts/AppProvider';\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}